services:
  novamusic-backend:
    image: daronenko/novamusic-backend:${VERSION}
    container_name: novamusic-backend
    platform: linux/amd64
    env_file: .env
    build:
      dockerfile: docker/Dockerfile.${ENV}
      context: ..
    ports:
      - 8080:8080
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
      # minio:
      #   condition: service_healthy
    volumes:
      - /etc/ssl/nova-music.ru:/etc/ssl/nova-music.ru

  postgres:
    container_name: novamusic-postgres
    image: postgres:16
    platform: linux/amd64
    env_file: .env
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    restart: on-failure
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'",
        ]
      interval: 2s
      timeout: 3s
      retries: 3
    volumes:
      - postgres-volume:/var/lib/postgresql/data

  migrations:
    container_name: novamusic-postgres-migrations
    image: ghcr.io/kukymbr/goose-docker:3.22.1
    platform: linux/amd64
    restart: no
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - GOOSE_DRIVER=postgres
      - GOOSE_DBSTRING=host=${POSTGRES_HOST} port=${POSTGRES_PORT} user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} dbname=${POSTGRES_DB}
      - GOOSE_VERBOSE=true
    volumes:
      - ../internal/db/postgres/migrations:/migrations

  minio:
    container_name: novamusic-minio
    image: minio/minio:latest
    platform: linux/amd64
    restart: always
    env_file: .env
    environment:
      - MINIO_ROOT_USER=${MINIO_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
      - MINIO_SERVER_URL=https://${HOST}:8010
      - MINIO_BROWSER_REDIRECT_URL=https://${HOST}
    ports:
      - 8010:9000
      - 8011:9001
    command: server --console-address :9001 /data
    # healthcheck:
    #   test: ["CMD", "mc", "ready", "local"]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 3
    volumes:
      - minio-volume:/data
      - /etc/ssl/nova-music.ru:/root/.minio/certs:ro

  minio-client:
    container_name: minio-client
    image: minio/mc:latest
    env_file: .env
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host rm local;
      /usr/bin/mc config host add --quiet --api s3v4 local https://minio:9000 ${MINIO_USER} ${MINIO_PASSWORD};

      /usr/bin/mc mb --quiet local/avatars;
      /usr/bin/mc policy set public local/avatars;

      /usr/bin/mc mb --quiet local/images;
      /usr/bin/mc policy set public local/images;

      /usr/bin/mc mb --quiet local/tracks;
      /usr/bin/mc policy set public local/tracks;
      "
    # depends_on:
    #   minio:
    #     condition: service_healthy

volumes:
  postgres-volume:
  minio-volume:
