services:
  novamusic-backend:
    image: daronenko/novamusic-backend:${VERSION}
    container_name: novamusic-backend
    platform: linux/amd64
    env_file: .env
    build:
      dockerfile: docker/Dockerfile.${ENV}
      context: ..
    ports:
      - 8080:8080
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: novamusic-postgres
    image: postgres:16
    platform: linux/amd64
    env_file: .env
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    restart: on-failure
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'",
        ]
      interval: 2s
      timeout: 3s
      retries: 3
    volumes:
      - postgres-data:/var/lib/postgresql/data

  migrations:
    image: ghcr.io/kukymbr/goose-docker:3.22.1
    platform: linux/amd64
    restart: no
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - GOOSE_DRIVER=postgres
      - GOOSE_DBSTRING=host=${POSTGRES_HOST} port=${POSTGRES_PORT} user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} dbname=${POSTGRES_DB}
      - GOOSE_VERBOSE=true
    volumes:
      - ../internal/db/postgres/migrations:/migrations

volumes:
  postgres-data:
