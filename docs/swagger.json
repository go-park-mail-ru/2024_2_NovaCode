{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/albums/all": {
            "get": {
                "description": "Retrieves a list of all albums from the database.",
                "summary": "Get all albums",
                "responses": {
                    "200": {
                        "description": "List of all albums",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.AlbumDTO"
                            }
                        }
                    },
                    "404": {
                        "description": "No albums found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to load albums",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/albums/search": {
            "get": {
                "description": "Searches for albums based on the provided \"name\" query parameter.",
                "summary": "Search albums by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the album to search for",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of found albums",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.AlbumDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No albums found with the provided name",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to search or encode albums",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/albums/{id}": {
            "get": {
                "description": "Retrieves an album using the provided album ID in the URL path.",
                "summary": "Get album by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Album ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Album found",
                        "schema": {
                            "$ref": "#/definitions/dto.AlbumDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid album ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Album not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to encode the album data",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/artists/all": {
            "get": {
                "description": "Retrieves a list of all artists from the database.",
                "summary": "Get all artists",
                "responses": {
                    "200": {
                        "description": "List of all artists",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ArtistDTO"
                            }
                        }
                    },
                    "404": {
                        "description": "No artists found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to load artists",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/artists/search": {
            "get": {
                "description": "Searches for artists based on the provided \"name\" query parameter.",
                "summary": "Search artists by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the artist to search for",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of found artists",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ArtistDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No artists found with the provided name",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to search or encode artists",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/artists/{id}": {
            "get": {
                "description": "Retrieves an artist using the provided artist ID in the URL path.",
                "summary": "Get artist by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Artist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artist found",
                        "schema": {
                            "$ref": "#/definitions/dto.ArtistDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid artist ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Artist not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to encode the artist data",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "description": "Authenticate user with username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "User login details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "$ref": "#/definitions/dto.UserTokenDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or missing fields",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid username or password",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to return token",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "description": "Log out user and clear access token cookie",
                "summary": "Log out user",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "$ref": "#/definitions/utils.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to log out",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "description": "Register new user with username, email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User registration successful",
                        "schema": {
                            "$ref": "#/definitions/dto.UserTokenDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or missing fields",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to return token",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/health": {
            "get": {
                "description": "Returns \"OK\" if the service is running",
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/tracks/all": {
            "get": {
                "description": "Retrieves a list of all tracks from the database.",
                "summary": "Get all tracks",
                "responses": {
                    "200": {
                        "description": "List of all tracks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.TrackDTO"
                            }
                        }
                    },
                    "404": {
                        "description": "No tracks found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to load tracks",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/tracks/search": {
            "get": {
                "description": "Searches for tracks based on the provided \"name\" query parameter.",
                "summary": "Search tracks by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the track to search for",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of found tracks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.TrackDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid query parameter",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No tracks found with the provided name",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to search or encode tracks",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/tracks/{id}": {
            "get": {
                "description": "Retrieves an track using the provided track ID in the URL path.",
                "summary": "Get track by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Track ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Track found",
                        "schema": {
                            "$ref": "#/definitions/dto.TrackDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid track ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Track not found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to encode the track data",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AlbumDTO": {
            "type": "object",
            "properties": {
                "artistId": {
                    "type": "string"
                },
                "genre": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "release": {
                    "type": "string"
                },
                "trackCount": {
                    "type": "integer"
                }
            }
        },
        "dto.ArtistDTO": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.TrackDTO": {
            "type": "object",
            "properties": {
                "album": {
                    "type": "string"
                },
                "artist": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "filepath": {
                    "type": "string"
                },
                "genre": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "release": {
                    "type": "string"
                }
            }
        },
        "dto.UserDTO": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.UserTokenDTO": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/dto.UserDTO"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "utils.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "utils.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}